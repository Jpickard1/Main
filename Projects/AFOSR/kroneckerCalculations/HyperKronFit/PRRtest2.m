function [r] = PPRtest2(p, theta, A, u, v)
% PPRTEST2
%
%   This function aims to accelerate the speed of PRRtest.m which appears
%   to be the bottle neck in the system.
%
%   This function evaluates equations 5.7 and 5.8 in the thesis to
%   determine if the likelihood of the adjacency matrix being generated by
%   A will increase or decrease when the labeling of As nodes is evaluated
%   with permutations p and p with the terms u and v swapped.
%
% Auth: Joshua Pickard
%       jpic@umich.edu
% Date: June 8, 2023

n = size(A,1);
p1 = p;                 % permutation 1
p2 = p;
p2([u v]) = p2([v u]);  % permutation 2

r = 1;
for i=1:n
    e1 = edgeProbability(n, theta, p1(u), p1(i));
    e2 = edgeProbability(n, theta, p2(u), p2(i));
    if A(u,i) == 1
        rij = e1 / e2;
    else
        rij = (1 - e1) / (1 - e2);
    end
    r = r * (rij);

    e1 = edgeProbability(n, theta, p1(i), p1(u));
    e2 = edgeProbability(n, theta, p2(i), p2(u));
    if A(i,u) == 1
        rij = e1 / e2;
    else
        rij = (1 - e1) / (1 - e2);
    end
    r = r * (rij);

    e1 = edgeProbability(n, theta, p1(v), p1(i));
    e2 = edgeProbability(n, theta, p2(v), p2(i));
    if A(v,i) == 1
        rij = e1 / e2;
    else
        rij = (1 - e1) / (1 - e2);
    end
    r = r * (rij);

    e1 = edgeProbability(n, theta, p1(i), p1(v));
    e2 = edgeProbability(n, theta, p2(i), p2(v));
    if A(i,v) == 1
        rij = e1 / e2;
    else
        rij = (1 - e1) / (1 - e2);
    end
    r = r * (rij);
end

end


